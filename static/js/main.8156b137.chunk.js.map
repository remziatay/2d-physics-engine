{"version":3,"sources":["Components/Controls.module.css","Engine/Engine.js","Math/Vector.js","Engine/PolyPoly.js","Engine/Physics.js","Engine/World.js","Math/Utils.js","Shapes/Polygon.js","Components/Canvas.js","Components/TargetIcon.js","Components/Controls.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Engine","physics","clearFunc","on","engine","rafSchd","clear","removeRedundantShapes","checkCollisions","shapes","forEach","shape","update","draw","ctx","this","fpsSample","start","cancel","Vector","x","y","other","inplace","copy","num","Number","isFinite","sqrLen","div","Math","sqrt","val","inverse","radian","point","cos","sin","newX","newY","vectors","length","vector","PolyPoly","polygon","direction","furthest","vertex","vertices","distance","Infinity","i","vCount","dot","index","a","b","normal","normals","calcNormals","faceIndex","minPen","support","supportPoint","multiply","penetration","sub","face","points","d1","d2","clipped","ZERO","clipCount","t","add","refFaceNormal","skip","minDot","incFaceIdx","includes","indices","leastPenetrationFace","polygonFaceIdx","polygonPen","otherFaceIdx","otherPen","refPoly","refFaceIdx","incPoly","refFace","getFace","contacts","incFace","searchLoop","incidentFace","d","center","push","position","tangent","cross","incPoints","sideFaceIdx","clipPointsBelow","Physics","canvas","shapeCount","g","polyPoly","getContext","width","height","filter","v","gravity","sort","c1","c2","contact","position1","position2","relativeVelocity1","getVelocityAtPoint","relativeVelocity2","len1","len2","relativeVelocity","contactVelocity","r1","r2","impulseMagnitude","invMass","invInertia","impulse","normalize","frictionImpulse","tangentMagnitude","abs","applyImpulse","negative","correction","max","move","j","collide","resolveContacts","positionalCorrection","x1","y1","x2","y2","x3","y3","x4","y4","det","tolerance","min","polygon1","polygon2","vertices1","vertices2","list","colls","change","p1","p2","p3","p4","s","lineIntersection","avX","reduce","acc","avY","shape1","shape2","types","constructor","name","Circle","rectCircleCollision","Rectangle","polygonCollision","rectangle","circle","w","h","cx","cy","r","testX","testY","World","clearRect","addShapes","Utils","radians","PI","degrees","globalCompositeOperation","beginPath","lineWidth","strokeStyle","floor","random","toString","moveTo","lineTo","stroke","Polygon","size","angle","color","mass","inertia","density","kinetic","undefined","Error","degToRad","calcRegularVertices","initialize","staticFriction","dynamicFriction","restitution","dv","dw","area","vertex1","vertex2","triCenter","triArea","triInertia","sqrLength","attr","arguments","Object","prototype","hasOwnProperty","call","edge","rotate","fillStyle","fill","dt","angularVelocity","force","Canvas","setWorld","canvasRef","useRef","useEffect","current","resizeCanvas","clientWidth","clientHeight","window","addEventListener","world","tri1","tri2","groundScale","ground","hypot","gon5","prevent","e","preventDefault","removeEventListener","stop","ref","className","TargetIcon","viewBox","xmlns","fillRule","clipRule","memo","lastArgs","ret","getMassInertia","ErrorDiv","children","Controls","reset","useState","dragging","setDragging","dragRef","poss","pageX","pageY","style","left","top","drop","initialValues","vx","vy","vw","ax","ay","aw","px","py","initialTouched","validationSchema","object","number","moreThan","lessThan","integer","required","label","transform","ov","positive","boolean","default","onSubmit","values","parseFloat","pol","formik","styles","Form","gridTemplateColumns","htmlFor","id","type","minWidth","onBlur","handleBlur","value","onChange","target","valueAsNumber","mi","setValues","k","component","Legend","Button","onMouseDown","setFieldValue","onClick","App","setCanvas","useCallback","display","maxHeight","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.8156b137.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Form\":\"Controls_Form__3uzhr\",\"Legend\":\"Controls_Legend__3h88a\",\"Button\":\"Controls_Button__XT8Fb\"};","import rafSchd from 'raf-schd'\r\n\r\nexport default class Engine {\r\n  constructor (physics, clearFunc, on = true) {\r\n    this.fpsSample = []\r\n    if (on) this.start()\r\n    this.physics = physics\r\n    this.clear = clearFunc\r\n  }\r\n\r\n  start () {\r\n    if (!this.on) {\r\n      this.on = true\r\n      this.engine()\r\n    }\r\n  }\r\n\r\n  stop () {\r\n    this.engine.cancel()\r\n    this.on = false\r\n  }\r\n\r\n  engine = rafSchd(() => {\r\n    if (!this.on) return\r\n\r\n    const timestep = 0.06 // 60FPS\r\n\r\n    this.clear()\r\n    this.physics.removeRedundantShapes()\r\n    this.physics.checkCollisions()\r\n    // if (!this.on) return;\r\n\r\n    this.physics.shapes.forEach((shape) => {\r\n      if (this.on) shape.update(timestep)\r\n      shape.draw(this.physics.ctx)\r\n    })\r\n    this.engine()\r\n  })\r\n}\r\n","export default class Vector {\r\n  constructor (x, y) {\r\n    this.x = x\r\n    this.y = y\r\n  }\r\n\r\n  static get ZERO () {\r\n    return new Vector(0, 0)\r\n  }\r\n\r\n  static get ONE () {\r\n    return new Vector(1, 1)\r\n  }\r\n\r\n  copy () {\r\n    return new Vector(this.x, this.y)\r\n  }\r\n\r\n  equals (other) {\r\n    if (!other) return false\r\n    return this.x === other.x && this.y === other.y\r\n  }\r\n\r\n  add (other, inplace = false) {\r\n    if (!other) return inplace ? this : this.copy()\r\n    if (inplace) {\r\n      this.x += other.x\r\n      this.y += other.y\r\n      return this\r\n    }\r\n    return new Vector(this.x + other.x, this.y + other.y)\r\n  }\r\n\r\n  sub (other, inplace = false) {\r\n    if (!other) return inplace ? this : this.copy()\r\n    if (inplace) {\r\n      this.x -= other.x\r\n      this.y -= other.y\r\n      return this\r\n    }\r\n    return new Vector(this.x - other.x, this.y - other.y)\r\n  }\r\n\r\n  multiply (num, inplace = false) {\r\n    if (!num && num !== 0) return inplace ? this : this.copy()\r\n    if (inplace) {\r\n      this.x = Number.isFinite(this.x) ? Number.isFinite(num) ? (this.x * num) : num : this.x\r\n      this.y = Number.isFinite(this.y) ? Number.isFinite(num) ? (this.y * num) : num : this.y\r\n      return this\r\n    }\r\n    return new Vector(\r\n      Number.isFinite(this.x) ? Number.isFinite(num) ? (this.x * num) : num : this.x,\r\n      Number.isFinite(this.y) ? Number.isFinite(num) ? (this.y * num) : num : this.y\r\n    )\r\n  }\r\n\r\n  div (num, inplace = false) {\r\n    if (!num && num !== 0) return inplace ? this : this.copy()\r\n    if (inplace) {\r\n      this.x /= num\r\n      this.y /= num\r\n      return this\r\n    }\r\n    return new Vector(this.x / num, this.y / num)\r\n  }\r\n\r\n  get length () {\r\n    return Math.sqrt(this.x * this.x + this.y * this.y)\r\n  }\r\n\r\n  get sqrLength () {\r\n    // Use as much as possible for better performance\r\n    return this.x * this.x + this.y * this.y\r\n  }\r\n\r\n  normalize (inplace = false) {\r\n    const sqrLen = this.x * this.x + this.y * this.y\r\n    if (!sqrLen) return inplace ? this : new Vector(0, 0)\r\n    return this.div(Math.sqrt(sqrLen), inplace)\r\n  }\r\n\r\n  dot (other) {\r\n    if (!other) return false\r\n    return this.x * other.x + this.y * other.y\r\n  }\r\n\r\n  cross (val, inverse = false) {\r\n    if (typeof val === 'number') { return inverse ? new Vector(-val * this.y, val * this.x) : new Vector(val * this.y, -val * this.x) }\r\n    if (!val) return false\r\n    return this.x * val.y - this.y * val.x\r\n  }\r\n\r\n  negative (inplace = false) {\r\n    if (inplace) {\r\n      this.x = -this.x\r\n      this.y = -this.y\r\n      return this\r\n    }\r\n    return new Vector(-this.x, -this.y)\r\n  }\r\n\r\n  flip (inplace = false) {\r\n    if (inplace) {\r\n      this.x = this.y\r\n      this.y = this.x\r\n      return this\r\n    }\r\n    return new Vector(this.y, this.y)\r\n  }\r\n\r\n  rotate (radian, point = { x: 0, y: 0 }, inplace = false) {\r\n    if (!radian) return inplace ? this : this.copy()\r\n    const cos = Math.cos(radian)\r\n    const sin = Math.sin(radian)\r\n    const newX = point.x + cos * (this.x - point.x) - sin * (this.y - point.y)\r\n    const newY = point.y + sin * (this.x - point.x) + cos * (this.y - point.y)\r\n    if (inplace) {\r\n      this.x = newX\r\n      this.y = newY\r\n      return this\r\n    }\r\n    return new Vector(newX, newY)\r\n  }\r\n\r\n  static rotate (vectors = [], radian, point = { x: 0, y: 0 }) {\r\n    if (!vectors || !vectors.length || !radian) return\r\n    const cos = Math.cos(radian)\r\n    const sin = Math.sin(radian)\r\n    vectors.forEach((vector) => {\r\n      const newX = point.x + cos * (vector.x - point.x) - sin * (vector.y - point.y)\r\n      const newY = point.y + sin * (vector.x - point.x) + cos * (vector.y - point.y)\r\n      vector.x = newX\r\n      vector.y = newY\r\n    })\r\n  }\r\n}\r\n","import Vector from '../Math/Vector'\r\n\r\nexport default class PolyPoly {\r\n  supportPoint (polygon, direction) {\r\n    let furthest = { vertex: polygon.vertices[0], distance: -Infinity }\r\n    for (let i = 0; i < polygon.vCount; i++) {\r\n      const vertex = polygon.vertices[i]\r\n      const distance = vertex.dot(direction)\r\n      if (distance > furthest.distance) furthest = { vertex, distance }\r\n    }\r\n    return furthest.vertex\r\n  }\r\n\r\n  getFace (polygon, index) {\r\n    return {\r\n      a: polygon.vertices[index],\r\n      b: polygon.vertices[(index + 1) % polygon.vCount],\r\n      normal: polygon.normals[index]\r\n    }\r\n  }\r\n\r\n  leastPenetrationFace (polygon, other) {\r\n    polygon.calcNormals()\r\n    other.calcNormals()\r\n    let faceIndex = 0\r\n    let minPen = Infinity\r\n    for (let i = 0; i < polygon.vCount; i++) {\r\n      const vertex = polygon.vertices[i]\r\n      const normal = polygon.normals[i]\r\n      const support = this.supportPoint(other, normal.multiply(-1))\r\n\r\n      const penetration = normal.multiply(-1).dot(support.sub(vertex))\r\n      if (penetration < minPen) {\r\n        minPen = penetration\r\n        faceIndex = i\r\n      }\r\n    }\r\n    // if(min_pen <= 0) return null;\r\n    return { faceIndex, minPen }\r\n  }\r\n\r\n  clipPointsBelow (face, points) {\r\n    const d1 = face.normal.dot(points[0]) - face.normal.dot(face.a)\r\n    const d2 = face.normal.dot(points[1]) - face.normal.dot(face.a)\r\n\r\n    const clipped = [Vector.ZERO, Vector.ZERO]\r\n    let clipCount = 0\r\n\r\n    // If below face, leave as-is\r\n    if (d1 <= 0.0) clipped[clipCount++] = points[0]\r\n    if (d2 <= 0.0) clipped[clipCount++] = points[1]\r\n    if (clipCount === 2) return { clipped, clipCount }\r\n\r\n    // If one point above and other below face, clip\r\n    if (d1 * d2 < 0.0) {\r\n      const t = d1 / (d1 - d2)\r\n      clipped[clipCount++] = points[0].add(points[1].sub(points[0]).multiply(t))\r\n    }\r\n\r\n    return { clipped, clipCount }\r\n  }\r\n\r\n  incidentFace (polygon, refFaceNormal, skip = []) {\r\n    let minDot = Infinity\r\n    let incFaceIdx = -1\r\n    for (let i = 0; i < polygon.vCount; i++) {\r\n      if (skip.includes(i)) continue\r\n      const dot = polygon.normals[i].dot(refFaceNormal)\r\n\r\n      if (dot < minDot) {\r\n        minDot = dot\r\n        incFaceIdx = i\r\n      }\r\n    }\r\n\r\n    return {\r\n      a: polygon.vertices[incFaceIdx],\r\n      b: polygon.vertices[(incFaceIdx + 1) % polygon.vCount],\r\n      normal: polygon.normals[incFaceIdx],\r\n      indices: [...skip, incFaceIdx]\r\n    }\r\n  }\r\n\r\n  collide (polygon, other) {\r\n    const { faceIndex: polygonFaceIdx, minPen: polygonPen } = this.leastPenetrationFace(polygon, other)\r\n    if (polygonPen <= 0.0) return\r\n\r\n    const { faceIndex: otherFaceIdx, minPen: otherPen } = this.leastPenetrationFace(other, polygon)\r\n    if (otherPen <= 0.0) return\r\n\r\n    let refPoly, refFaceIdx, incPoly, normal\r\n    if (otherPen >= 0.95 * polygonPen + 0.01 * otherPen) {\r\n      refPoly = polygon\r\n      refFaceIdx = polygonFaceIdx\r\n      incPoly = other\r\n      normal = refPoly.normals[refFaceIdx]\r\n    } else {\r\n      refPoly = other\r\n      refFaceIdx = otherFaceIdx\r\n      incPoly = polygon\r\n      normal = refPoly.normals[refFaceIdx].multiply(-1)\r\n    }\r\n    const refFace = this.getFace(refPoly, refFaceIdx)\r\n\r\n    const contacts = []\r\n    let incFace = { indices: [] }\r\n\r\n    searchLoop: while (contacts.length === 0) {\r\n      incFace = this.incidentFace(incPoly, refFace.normal, incFace.indices)\r\n      if (!incFace.normal) {\r\n        const d = refFace.normal.dot(refPoly.center) - refFace.normal.dot(refFace.a)\r\n        contacts.push({ position: refPoly.center, penetration: -d, normal, tangent: normal.cross(1) })\r\n        break\r\n      }\r\n      let incPoints = [incFace.a, incFace.b]\r\n      const sideFacesIdx = [\r\n        (refFaceIdx + 1) % refPoly.vCount,\r\n        (refFaceIdx + refPoly.vCount - 1) % refPoly.vCount\r\n      ]\r\n      // Clip by side faces of ref face (not ref face itself)\r\n      for (const sideFaceIdx of sideFacesIdx) {\r\n        const face = this.getFace(refPoly, sideFaceIdx)\r\n        const { clipped, clipCount } = this.clipPointsBelow(face, incPoints)\r\n        if (clipCount < 2) continue searchLoop\r\n        incPoints = clipped\r\n      }\r\n\r\n      incPoints.forEach((position) => {\r\n        const d = refFace.normal.dot(position) - refFace.normal.dot(refFace.a)\r\n        if (d < 0.0) {\r\n          contacts.push({ polygon, other, position, penetration: -d, normal, tangent: normal.cross(1) })\r\n        }\r\n      })\r\n    }\r\n    return contacts\r\n  }\r\n}\r\n","import PolyPoly from './PolyPoly'\r\nimport Vector from '../Math/Vector'\r\n\r\nexport default class Physics {\r\n  constructor (canvas, g = 0) {\r\n    this.shapes = []\r\n    this.shapeCount = 0\r\n    this.g = 0\r\n    this.polyPoly = new PolyPoly()\r\n    // this.setGravity(g);\r\n    this.ctx = canvas.getContext('2d')\r\n    this.width = canvas.width\r\n    this.height = canvas.height\r\n  }\r\n\r\n  static get gravity () {\r\n    return new Vector(0, 10)\r\n  }\r\n\r\n  addShapes (shapes) {\r\n    shapes.forEach((shape) => {\r\n      this.shapes.push(shape)\r\n    })\r\n    this.shapeCount += shapes.length\r\n  }\r\n\r\n  removeRedundantShapes () {\r\n    // window.show && console.log(this.shapes?.length, this.shapes, (window.show = false))\r\n    this.shapes = this.shapes.filter(shape => {\r\n      const { center, v, gravity } = shape\r\n      if (center.x < -500 && v.x < 0) return false\r\n      if (center.x > 2600 && v.x > 0) return false\r\n      if (center.y < -500 && v.y <= 0 && (!gravity || this.g <= 0)) return false\r\n      if (center.y > 4500 && v.y >= 0 && (!gravity || this.g >= 0)) return false\r\n      return true\r\n    })\r\n    this.shapeCount = this.shapes.length\r\n  }\r\n\r\n  setGravity (g) {\r\n    if (g - this.g) this.shapes.forEach((shape) => (shape.a.y += g - this.g))\r\n    this.g = g\r\n  }\r\n\r\n  resolveContacts (contacts) {\r\n    if (!contacts || !contacts.length) return\r\n\r\n    contacts.sort((c1, c2) => c2.penetration - c1.penetration)\r\n    const contact = contacts[0]\r\n    if (contacts.length > 1 && contacts[0].penetration - contacts[1].penetration < 0.05) {\r\n      const { polygon, other, position: position1 } = contacts[0]\r\n      const { position: position2 } = contacts[1]\r\n      const relativeVelocity1 = polygon.getVelocityAtPoint(position1).sub(other.getVelocityAtPoint(position1))\r\n      const relativeVelocity2 = polygon.getVelocityAtPoint(position2).sub(other.getVelocityAtPoint(position2))\r\n      const len1 = relativeVelocity1.length\r\n      const len2 = relativeVelocity2.length\r\n      contact.position = position1.multiply(len1).add(position2.multiply(len2)).div(len1 + len2)\r\n      contact.relativeVelocity = relativeVelocity1.add(relativeVelocity2).multiply(0.5)\r\n    }\r\n\r\n    let { polygon, other, position, normal, tangent } = contact\r\n    const relativeVelocity = polygon.getVelocityAtPoint(position).sub(other.getVelocityAtPoint(position))\r\n\r\n    const contactVelocity = relativeVelocity.dot(normal)\r\n    if (relativeVelocity.dot(normal) < 0) {\r\n      // console.log('seperating')\r\n      return true\r\n    }\r\n\r\n    const e = 0.2\r\n    const r1 = position.sub(polygon.center)\r\n    const r2 = position.sub(other.center)\r\n    const impulseMagnitude =\r\n      -(1 + e) *\r\n      contactVelocity /\r\n      (polygon.invMass +\r\n        other.invMass +\r\n        polygon.invInertia * r1.cross(normal) ** 2 +\r\n        other.invInertia * r2.cross(normal) ** 2)\r\n\r\n    if (!Number.isFinite(impulseMagnitude)) return true\r\n\r\n    const impulse = normal.multiply(impulseMagnitude * 1.05)\r\n\r\n    tangent = relativeVelocity.sub(normal.multiply(relativeVelocity.dot(normal))).normalize()\r\n\r\n    const tangentMagnitude =\r\n      -relativeVelocity.dot(tangent) /\r\n      (polygon.invMass +\r\n        other.invMass +\r\n        polygon.invInertia * r1.cross(tangent) ** 2 +\r\n        other.invInertia * r2.cross(tangent) ** 2)\r\n\r\n    let frictionImpulse\r\n\r\n    if (Math.abs(relativeVelocity.dot(tangent)) < 0.0001) {\r\n      // console.log('too low')\r\n      frictionImpulse = Vector.ZERO\r\n    } else {\r\n      if (Math.abs(tangentMagnitude) < Math.abs(impulseMagnitude)) {\r\n        frictionImpulse = tangent.multiply(tangentMagnitude)\r\n      } else {\r\n        frictionImpulse = tangent.multiply(impulseMagnitude)\r\n      }\r\n    }\r\n\r\n    polygon.applyImpulse(impulse, position)\r\n    other.applyImpulse(impulse.negative(), position)\r\n\r\n    polygon.applyImpulse(frictionImpulse, position)\r\n    other.applyImpulse(frictionImpulse.negative(), position)\r\n  }\r\n\r\n  positionalCorrection (contacts) {\r\n    const { polygon, other, normal, penetration } = contacts[0]\r\n    const kSlop = 0.05 // Penetration allowance\r\n    const percent = 0.2 // Penetration percentage to correct\r\n    const correction = normal.multiply(\r\n      Math.max(penetration - kSlop, 0) / (polygon.invMass + other.invMass) * percent\r\n    )\r\n\r\n    if (polygon.invMass !== 0) polygon.move(correction.multiply(-polygon.invMass))\r\n    if (other.invMass !== 0) other.move(correction.multiply(other.invMass))\r\n  }\r\n\r\n  checkCollisions () {\r\n    const contacts = []\r\n    for (let i = 0; i < this.shapeCount; i++) {\r\n      const polygon = this.shapes[i]\r\n      for (let j = i + 1; j < this.shapeCount; j++) {\r\n        const other = this.shapes[j]\r\n        const contact = this.polyPoly.collide(polygon, other)\r\n        if (contact) contacts.push(contact)\r\n      }\r\n    }\r\n\r\n    contacts.forEach((contact) => {\r\n      for (let i = 0; i < 10; i++) {\r\n        if (this.resolveContacts(contact)) break\r\n      }\r\n\r\n      this.positionalCorrection(contact)\r\n    })\r\n  }\r\n\r\n  lineIntersection ({ x: x1, y: y1 }, { x: x2, y: y2 }, { x: x3, y: y3 }, { x: x4, y: y4 }) {\r\n    const det = (x1 - x2) * (y3 - y4) - (y1 - y2) * (x3 - x4)\r\n    if (!det) return null\r\n\r\n    const point = {}\r\n    const tolerance = 0.000001\r\n    point.x = ((x1 * y2 - y1 * x2) * (x3 - x4) - (x1 - x2) * (x3 * y4 - y3 * x4)) / det\r\n    if (\r\n      point.x + tolerance < Math.min(x1, x2) ||\r\n      point.x - tolerance > Math.max(x1, x2) ||\r\n      (point.x + tolerance < Math.min(x3, x4) || point.x - tolerance > Math.max(x3, x4))\r\n    ) {\r\n      return null\r\n    }\r\n\r\n    point.y = ((x1 * y2 - y1 * x2) * (y3 - y4) - (y1 - y2) * (x3 * y4 - y3 * x4)) / det\r\n    if (\r\n      point.y + tolerance < Math.min(y1, y2) ||\r\n      point.y - tolerance > Math.max(y1, y2) ||\r\n      point.y + tolerance < Math.min(y3, y4) ||\r\n      point.y - tolerance > Math.max(y3, y4)\r\n    ) {\r\n      return null\r\n    }\r\n    return point\r\n  }\r\n\r\n  polygonCollision (polygon1, polygon2) {\r\n    // TODO: bir nokta bulunca onu baz alsın dene\r\n    const vertices1 = polygon1.vertices\r\n    const vertices2 = polygon2.vertices\r\n    const list = []\r\n    this.colls[0].change({ center: { x: -50 } })\r\n    for (let i = 0; i < vertices1.length; i++) {\r\n      const p1 = vertices1[i]\r\n      const p2 = vertices1[i + 1] || vertices1[0]\r\n      for (let j = 0; j < vertices2.length; j++) {\r\n        const p3 = vertices2[j]\r\n        const p4 = vertices2[j + 1] || vertices2[0]\r\n        const s = this.lineIntersection(p1, p2, p3, p4)\r\n        if (s) {\r\n          list.push(s)\r\n        }\r\n      }\r\n    }\r\n    if (!list.length) {\r\n      return false\r\n    }\r\n    const avX = list.reduce((acc, val) => acc + val.x, 0) / list.length\r\n    const avY = list.reduce((acc, val) => acc + val.y, 0) / list.length\r\n    polygon1.v.y *= -1\r\n    polygon2.v.y *= -1\r\n    return { x: avX, y: avY }\r\n  }\r\n\r\n  isCollision (shape1, shape2) {\r\n    const types = {}\r\n    types[shape1.constructor.name] = [shape1]\r\n    types[shape2.constructor.name] = types[shape2.constructor.name] ? [shape1, shape2] : [shape2]\r\n    if (!types.Circle) return this.polygonCollision(shape1, shape2)\r\n    else return this.rectCircleCollision(...types.Rectangle, ...types.Circle)\r\n  }\r\n\r\n  rectCircleCollision (rectangle, circle) {\r\n    const { x, y, w, h } = rectangle\r\n    const { x: cx, y: cy, r } = circle\r\n\r\n    let testX = cx\r\n    let testY = cy\r\n\r\n    if (cx < x) testX = x\r\n    else if (cx > x + w) testX = x + w\r\n    if (cy < y) testY = y\r\n    else if (cy > y + h) testY = y + h\r\n    return (cx - testX) ** 2 + (cy - testY) ** 2 <= r ** 2\r\n  }\r\n}\r\n","import Engine from './Engine'\r\nimport Physics from './Physics'\r\n\r\nexport default class World {\r\n  constructor (canvas, gravity = 0) {\r\n    this.ctx = canvas.getContext('2d')\r\n    this.physics = new Physics(canvas, gravity)\r\n    this.engine = new Engine(this.physics, () => this.ctx.clearRect(0, 0, canvas.width, canvas.height))\r\n  }\r\n\r\n  addShapes (...shapes) {\r\n    this.physics.addShapes(shapes)\r\n  }\r\n}\r\n","export default class Utils {\r\n  static radToDeg (radians) {\r\n    return radians * (180 / Math.PI)\r\n  }\r\n\r\n  static degToRad (degrees) {\r\n    return degrees * (Math.PI / 180)\r\n  }\r\n\r\n  static drawVector (cx, vector, position) {\r\n    // TODO remove this, debug purpose\r\n    cx.globalCompositeOperation = 'source-over'\r\n    cx.beginPath()\r\n    cx.lineWidth = 2\r\n    cx.strokeStyle = '#' + Math.floor(Math.random() * 16777215).toString(16)\r\n    cx.moveTo(position.x, position.y)\r\n    cx.lineTo(position.x + vector.x, position.y + vector.y)\r\n    cx.stroke()\r\n    cx.globalCompositeOperation = 'destination-over'\r\n  }\r\n}\r\n","import Physics from '../Engine/Physics'\r\nimport Vector from '../Math/Vector'\r\nimport Utils from '../Math/Utils'\r\n\r\nexport default class Polygon {\r\n  constructor ({ vertices, vCount, center, size, angle, color, mass, inertia, density, v, a, kinetic, gravity }) {\r\n    if (density !== undefined && mass !== undefined) throw new Error(\"Shouldn't give both density and mass!\")\r\n    else if (!density && !mass) density = 1\r\n    if (vertices) {\r\n      this.vCount = vertices.length\r\n      this.vertices = vertices\r\n    } else if (center && vCount) {\r\n      this.center = new Vector(center.x, center.y)\r\n      this.vCount = vCount\r\n      this.vertices = calcRegularVertices(angle || 0)\r\n    } else throw new Error(\"Can't create polygon without vertices or center and vertex count!\")\r\n    this.mass = mass\r\n    this.inertia = inertia\r\n    this.density = density\r\n    this.initialize()\r\n    this.kinetic = kinetic === undefined ? true : kinetic\r\n    this.gravity = gravity === undefined ? true : gravity\r\n    this.angle = Utils.degToRad(angle || 0)\r\n    // todo\r\n    this.staticFriction = 0.8\r\n    this.dynamicFriction = 0.8\r\n    this.restitution = 0.2\r\n    this.calcNormals()\r\n    v = { x: 0, y: 0, r: 0, ...v }\r\n    a = { x: 0, y: 0, r: 0, ...a }\r\n    this.v = new Vector(v.x, v.y)\r\n    this.dv = new Vector(a.x, a.y)\r\n    this.w = Utils.degToRad(v.r)\r\n    this.dw = Utils.degToRad(a.r)\r\n    this.color = color || '#' + Math.floor(Math.random() * 16777215).toString(16)\r\n\r\n    function calcRegularVertices (angle) {\r\n      angle -= 90 + (vCount % 2 ? 0 : 180 / vCount)\r\n      size = size || 1\r\n      const vertices = []\r\n      const radian = Utils.degToRad(angle)\r\n      for (let i = 0; i < vCount; i++) {\r\n        vertices.push(\r\n          new Vector(\r\n            center.x + size * Math.cos(radian + i * 2 * Math.PI / vCount),\r\n            center.y + size * Math.sin(radian + i * 2 * Math.PI / vCount)\r\n          )\r\n        )\r\n      }\r\n      return vertices\r\n    }\r\n  }\r\n\r\n  initialize () {\r\n    const { vertices, vCount } = this\r\n    let [area, inertia, center] = [0, 0, Vector.ZERO]\r\n    for (let i = 0; i < vCount; i++) {\r\n      const vertex1 = vertices[i]\r\n      const vertex2 = vertices[(i + 1) % vCount]\r\n      const cross = vertex1.cross(vertex2)\r\n\r\n      const triCenter = vertex1.add(vertex2).div(3)\r\n      const triArea = cross / 2\r\n      const triInertia = triArea * (vertex1.sqrLength + vertex1.dot(vertex2) + vertex2.sqrLength)\r\n\r\n      center = center.multiply(area).add(triCenter.multiply(triArea)).div(area + triArea)\r\n      area += triArea\r\n      inertia += triInertia\r\n    }\r\n    inertia /= 6\r\n    if (!this.center) this.center = center\r\n    if (!this.density) this.density = this.mass / area\r\n    else if (this.mass === undefined) this.mass = this.density * area\r\n    inertia *= this.density\r\n    inertia -= this.mass * this.center.sqrLength\r\n    if (this.inertia === undefined) this.inertia = inertia || Infinity\r\n    this.invInertia = this.inertia && 1 / this.inertia\r\n    this.invMass = this.mass && 1 / this.mass\r\n  }\r\n\r\n  // TODO FIX THIS!!!\r\n  change ({ center, angle, vCount, size, color, mass, v, a, kinetic }) {\r\n    this.center = new Vector(center.x, center.y)\r\n    this.v = { ...this.v, ...v }\r\n    this.a = { ...this.a, ...a }\r\n\r\n    for (const attr in arguments[0]) {\r\n      if (Object.prototype.hasOwnProperty.call(arguments[0], attr) && typeof this[attr] != 'object') {\r\n        this[attr] = arguments[0][attr]\r\n      }\r\n    }\r\n    // if (center || angle || vCount) this.vertices = this.createRegularPolygonVertices();\r\n  }\r\n\r\n  calcNormals () {\r\n    if (this.normals) return this.normals\r\n    const normals = []\r\n    for (let i = 0; i < this.vCount; i++) {\r\n      const j = (i + 1) % this.vCount\r\n      const edge = this.vertices[j].sub(this.vertices[i])\r\n      normals.push(edge.normalize().cross(1))\r\n    }\r\n    this.normals = normals\r\n  }\r\n\r\n  rotate (radian) {\r\n    if (!radian) return\r\n    Vector.rotate(this.vertices, radian, this.center)\r\n    this.angle += radian\r\n    this.normals = null\r\n  }\r\n\r\n  draw (ctx) {\r\n    const { vertices } = this\r\n    ctx.beginPath()\r\n    ctx.moveTo(vertices[0].x, vertices[0].y)\r\n    for (let i = 1; i < this.vCount; i++) ctx.lineTo(vertices[i].x, vertices[i].y)\r\n    ctx.lineTo(vertices[0].x, vertices[0].y)\r\n    ctx.stroke()\r\n    ctx.fillStyle = this.color\r\n    ctx.fill()\r\n  }\r\n\r\n  move (direction) {\r\n    this.center.add(direction, true)\r\n    this.vertices.forEach((vertex) => {\r\n      vertex.add(direction, true)\r\n    })\r\n  }\r\n\r\n  moveTo (point) {\r\n    const direction = point.sub(this.center)\r\n    this.move(direction)\r\n    this.v = Vector.ZERO\r\n  }\r\n\r\n  update (dt) {\r\n    if (!this.kinetic) return\r\n    const { v, dv, w, dw } = this\r\n    if (this.gravity) dv.add(Physics.gravity, true)\r\n\r\n    if (v.x < 0.001 && v.x > -0.001) v.x = 0\r\n    if (v.y < 0.001 && v.y > -0.001) v.y = 0\r\n    // if (w < 0.001 && w > -0.001) this.w = 0;\r\n\r\n    if (w || dw) this.rotate((w + dw / 2 * dt) * dt)\r\n    if (v.x || v.y || dv.x || dv.y) this.move(v.add(dv.multiply(dt / 2)).multiply(dt))\r\n\r\n    v.add(dv.multiply(dt), true)\r\n    this.w += dw * dt\r\n\r\n    dv.x = 0\r\n    dv.y = 0\r\n    this.dw = 0\r\n    // if ((this.vCount > 4) && this.invMass === 0) console.log(this.v)\r\n  }\r\n\r\n  getVelocityAtPoint (point) {\r\n    const r = point.sub(this.center)\r\n    const angularVelocity = r.cross(this.w, true)\r\n    return this.v.add(angularVelocity)\r\n  }\r\n\r\n  applyForce (force, point) {\r\n    if (!this.kinetic) return\r\n    const r = point.sub(this.center)\r\n    this.dv.add(force.multiply(this.invMass), true)\r\n    this.dw += r.cross(force) * this.invInertia\r\n  }\r\n\r\n  applyImpulse (impulse, point) {\r\n    if (!this.kinetic) return\r\n    const r = point.sub(this.center)\r\n    this.v.add(impulse.multiply(this.invMass), true)\r\n    this.w += r.cross(impulse) * this.invInertia\r\n  }\r\n}\r\n","import React, { useEffect, useRef } from 'react'\r\nimport World from '../Engine/World'\r\nimport Vector from '../Math/Vector'\r\nimport Polygon from '../Shapes/Polygon'\r\n\r\nconst Canvas = ({ setWorld }) => {\r\n  const canvasRef = useRef()\r\n\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current\r\n    function resizeCanvas () {\r\n      canvas.width = canvas.clientWidth\r\n      canvas.height = canvas.clientHeight\r\n    }\r\n    window.addEventListener('resize', resizeCanvas, false)\r\n    resizeCanvas()\r\n\r\n    const world = new World(canvas, 10)\r\n    setWorld(world)\r\n\r\n    const tri1 = new Polygon({\r\n      center: new Vector(100, 100),\r\n      mass: Infinity,\r\n      v: { r: 80 },\r\n      vCount: 3,\r\n      size: 80,\r\n      kinetic: true,\r\n      gravity: false\r\n    })\r\n    const tri2 = new Polygon({\r\n      center: new Vector(canvas.width - 100, 100),\r\n      mass: Infinity,\r\n      v: { r: 80 },\r\n      vCount: 3,\r\n      size: 80,\r\n      kinetic: true,\r\n      gravity: false\r\n    })\r\n    const groundScale = 2 / 3\r\n    const ground = new Polygon({\r\n      center: { x: canvas.width / 2, y: canvas.height + canvas.width / 2 * groundScale - 50 },\r\n      mass: Infinity,\r\n      inertia: Infinity,\r\n      vCount: 4,\r\n      size: Math.hypot(canvas.width, canvas.width) / 2 * groundScale,\r\n      kinetic: false\r\n    })\r\n    const gon5 = new Polygon({\r\n      center: { x: 200, y: 250 },\r\n      angle: 180,\r\n      v: { x: 15, y: 200 },\r\n      vCount: 13,\r\n      size: 80,\r\n      kinetic: true\r\n      // gravity: false,\r\n    })\r\n\r\n    world.addShapes(tri1, tri2, ground, gon5)\r\n\r\n    const prevent = e => e.preventDefault()\r\n    canvas.addEventListener('contextmenu', prevent)\r\n\r\n    return () => {\r\n      window.removeEventListener('resize', resizeCanvas)\r\n      canvas.removeEventListener('contextmenu', prevent)\r\n      world.engine.stop()\r\n    }\r\n  }, [setWorld])\r\n\r\n  return <canvas ref={canvasRef} className='block border border-gray-500 rounded-sm w-full h-full min-w-0 bg-gray-100'></canvas>\r\n}\r\n\r\nexport default Canvas\r\n","import React from 'react'\r\n\r\nconst TargetIcon = ({ width = 24, height = 24 }) => {\r\n  return (\r\n    <svg className='mx-auto' width={width} height={height} viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n      <path d=\"M12 15C13.6569 15 15 13.6569 15 12C15 10.3431 13.6569 9 12 9C10.3431 9 9 10.3431 9 12C9 13.6569 10.3431 15 12 15Z\" fill=\"currentColor\" />\r\n      <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M12 3C12.5523 3 13 3.44772 13 4V5.07089C16.0657 5.5094 18.4906 7.93431 18.9291 11H20C20.5523 11 21 11.4477 21 12C21 12.5523 20.5523 13 20 13H18.9291C18.4906 16.0657 16.0657 18.4906 13 18.9291V20C13 20.5523 12.5523 21 12 21C11.4477 21 11 20.5523 11 20V18.9291C7.93431 18.4906 5.5094 16.0657 5.07089 13H4C3.44772 13 3 12.5523 3 12C3 11.4477 3.44772 11 4 11H5.07089C5.5094 7.93431 7.93431 5.5094 11 5.07089V4C11 3.44772 11.4477 3 12 3ZM7 12C7 9.23858 9.23858 7 12 7C14.7614 7 17 9.23858 17 12C17 14.7614 14.7614 17 12 17C9.23858 17 7 14.7614 7 12Z\" fill=\"currentColor\" />\r\n    </svg>\r\n  )\r\n}\r\n\r\nexport default TargetIcon\r\n","import { ErrorMessage, Field, Form, Formik } from 'formik'\r\nimport rafSchd from 'raf-schd'\r\nimport React, { useEffect, useRef, useState } from 'react'\r\nimport { boolean, number, object } from 'yup'\r\nimport Vector from '../Math/Vector'\r\nimport Polygon from '../Shapes/Polygon'\r\nimport TargetIcon from './TargetIcon'\r\nimport styles from './Controls.module.css'\r\n\r\nconst memo = { lastArgs: {}, ret: {} }\r\nconst getMassInertia = (vCount, size = 1) => {\r\n  if (memo.lastArgs.vCount === vCount && memo.lastArgs.size === size) return memo.ret\r\n  memo.lastArgs = { vCount, size }\r\n  const vertices = []\r\n  for (let i = 0; i < vCount; i++) {\r\n    vertices.push(\r\n      new Vector(size * Math.cos(i * 2 * Math.PI / vCount), size * Math.sin(i * 2 * Math.PI / vCount))\r\n    )\r\n  }\r\n\r\n  let [area, inertia] = [0, 0]\r\n  for (let i = 0; i < vCount; i++) {\r\n    const vertex1 = vertices[i]\r\n    const vertex2 = vertices[(i + 1) % vCount]\r\n    const cross = vertex1.cross(vertex2)\r\n\r\n    const triArea = cross / 2\r\n    const triInertia = triArea * (vertex1.sqrLength + vertex1.dot(vertex2) + vertex2.sqrLength)\r\n    area += triArea\r\n    inertia += triInertia\r\n  }\r\n  memo.ret = { mass: area, inertia }\r\n  return memo.ret\r\n}\r\n\r\nconst ErrorDiv = ({ children }) => (\r\n  <div className='bg-red-600 px-2 py-1 text-justify text-yellow-100 border-gray-900 border rounded mb-2 col-span-full'>\r\n    {children}\r\n  </div>\r\n)\r\n\r\nconst Controls = ({ world, reset }) => {\r\n  const [dragging, setDragging] = useState(false)\r\n  const dragRef = useRef(null)\r\n\r\n  useEffect(() => {\r\n    if (!dragging) return\r\n    let poss = {}\r\n    const move = rafSchd(e => {\r\n      // setPos({ x: e.pageX, y: e.pageY })\r\n      poss = { x: e.pageX, y: e.pageY }\r\n      dragRef.current.style.left = poss.x + 'px'\r\n      dragRef.current.style.top = poss.y + 'px'\r\n    })\r\n    const drop = () => {\r\n      dragging(poss.x, poss.y)\r\n      move.cancel()\r\n      dragRef.current.style.left = 0\r\n      dragRef.current.style.top = 0\r\n      setDragging(false)\r\n    }\r\n    window.addEventListener('mousemove', move)\r\n    window.addEventListener('mouseup', drop)\r\n    return () => {\r\n      window.removeEventListener('mousemove', move)\r\n      window.removeEventListener('mouseup', drop)\r\n    }\r\n  }, [dragging])\r\n\r\n  return (\r\n    <>\r\n    <Formik\r\n      initialValues={{\r\n        'v-count': 6,\r\n        'v-size': 50,\r\n        angle: 0,\r\n        mass: getMassInertia(6, 50).mass,\r\n        inertia: getMassInertia(6, 50).inertia,\r\n        kinetic: true,\r\n        gravity: true,\r\n        vx: 0,\r\n        vy: 0,\r\n        vw: 0,\r\n        ax: 0,\r\n        ay: 0,\r\n        aw: 0,\r\n        px: 0,\r\n        py: 0\r\n      }}\r\n      initialTouched={{ 'v-count': true, 'v-size': true, mass: true, inertia: true }}\r\n      validationSchema={object({\r\n        'v-count': number().moreThan(2).lessThan(20).integer().required().label('Vertex count'),\r\n        'v-size': number().moreThan(0).lessThan(150).integer().required().label('Vertex size'),\r\n        angle: number().moreThan(-361).lessThan(361).required().label('Angle'),\r\n        mass: number().transform((v, ov) => ov === 'Infinity' ? Infinity : v).positive().required().label('Mass'),\r\n        inertia: number().transform((v, ov) => ov === 'Infinity' ? Infinity : v).positive().required().label('Inertia'),\r\n        kinetic: boolean().required(),\r\n        gravity: boolean().required(),\r\n        vx: number().default(0).transform((v, ov) => ov === '-' ? 0 : v).required().label('Velocity X'),\r\n        vy: number().default(0).transform((v, ov) => ov === '-' ? 0 : v).required().label('Velocity Y'),\r\n        vw: number().default(0).transform((v, ov) => ov === '-' ? 0 : v).required().label('Radial velocity'),\r\n        ax: number().default(0).transform((v, ov) => ov === '-' ? 0 : v).required().label('Acceleration X'),\r\n        ay: number().default(0).transform((v, ov) => ov === '-' ? 0 : v).required().label('Acceleration Y'),\r\n        aw: number().default(0).transform((v, ov) => ov === '-' ? 0 : v).required().label('Radial acceleration'),\r\n        px: number().required().label('Center X'),\r\n        py: number().required().label('Center Y')\r\n      })}\r\n      onSubmit={(values) => {\r\n        const { 'v-count': vCount, 'v-size': size, angle, mass, inertia, kinetic, gravity } = values\r\n        const center = { x: values.px, y: values.py }\r\n        const v = { x: parseFloat(values.vx) || 0, y: parseFloat(values.vy) || 0, r: parseFloat(values.vw) || 0 }\r\n        const a = { x: parseFloat(values.ax) || 0, y: parseFloat(values.ay) || 0, r: parseFloat(values.aw) || 0 }\r\n        const pol = new Polygon({ vCount, size, angle, mass, inertia, kinetic, gravity, center, v, a })\r\n        world.addShapes(pol)\r\n      }}\r\n    >\r\n      {formik =>\r\n        <Form className={styles.Form}>\r\n        <h2 className='block text-center text-xl py-1 text-green-700 font-semibold border-b-2 border-gray-400 '>Add a polygon</h2>\r\n        <div className='grid gap-1' style={{ gridTemplateColumns: '1fr 2fr' }}>\r\n          <label htmlFor=\"v-count\">Vertex count:</label>\r\n            <input id=\"v-count\" name=\"v-count\" type='number'\r\n              style={{ minWidth: '40px' }}\r\n              onBlur={formik.handleBlur}\r\n              value={formik.values['v-count']}\r\n              onChange={e => {\r\n                const val = e.target.valueAsNumber\r\n                const mi = getMassInertia(val, formik.values['v-size'])\r\n                formik.setValues(k => ({ ...k, ...mi, 'v-count': val }), true)\r\n              }}\r\n            />\r\n          <ErrorMessage name=\"v-count\" component={ErrorDiv}/>\r\n          <label htmlFor=\"v-size\">Vertex size:</label>\r\n          <input id=\"v-size\" name=\"v-size\" type='number'\r\n          style={{ minWidth: '40px' }}\r\n            onBlur={formik.handleBlur}\r\n            value={formik.values['v-size']}\r\n            onChange={e => {\r\n              const val = e.target.valueAsNumber\r\n              const mi = getMassInertia(formik.values['v-count'], val)\r\n              formik.setValues(k => ({ ...k, ...mi, 'v-size': val }), true)\r\n            }}/>\r\n          <ErrorMessage name=\"v-size\" component={ErrorDiv}/>\r\n          <label htmlFor=\"angle\">Initial angle:</label>\r\n          <Field style={{ minWidth: '40px' }} id=\"angle\" name=\"angle\" type='number'/>\r\n          <ErrorMessage name=\"angle\" component={ErrorDiv}/>\r\n          <label htmlFor=\"mass\">Mass:</label>\r\n          <Field style={{ minWidth: '40px' }} id=\"mass\" name=\"mass\"/>\r\n          <ErrorMessage name=\"mass\" component={ErrorDiv}/>\r\n          <label htmlFor=\"inertia\">Inertia:</label>\r\n          <Field style={{ minWidth: '40px' }} id=\"inertia\" name=\"inertia\" />\r\n          <ErrorMessage name=\"inertia\" component={ErrorDiv}/>\r\n        </div>\r\n        <div className='grid grid-cols-2'>\r\n          <label htmlFor=\"kinetic\"><Field id=\"kinetic\" name=\"kinetic\" type=\"checkbox\"/> Kinetic</label>\r\n          <label htmlFor=\"gravity\"><Field id=\"gravity\" name=\"gravity\" type=\"checkbox\"/> Gravity applies</label>\r\n        </div>\r\n        {formik.values.kinetic &&\r\n        <>\r\n          <legend className={styles.Legend}>Initial Speed</legend>\r\n          <div className='grid grid-cols-3 gap-1'>\r\n            <label htmlFor=\"vx\">X: </label>\r\n            <label htmlFor=\"vy\">Y: </label>\r\n            <label htmlFor=\"vw\">W: </label>\r\n            <Field style={{ minWidth: '20px' }} id=\"vx\" name=\"vx\" />\r\n            <Field style={{ minWidth: '20px' }} id=\"vy\" name=\"vy\" />\r\n            <Field style={{ minWidth: '20px' }} id=\"vw\" name=\"vw\" />\r\n            <ErrorMessage name=\"vx\" component={ErrorDiv}/>\r\n            <ErrorMessage name=\"vy\" component={ErrorDiv}/>\r\n            <ErrorMessage name=\"vw\" component={ErrorDiv}/>\r\n          </div>\r\n          <legend className={styles.Legend}>Initial Acceleration</legend>\r\n          <div className='grid grid-cols-3 gap-1'>\r\n            <label htmlFor=\"ax\">X: </label>\r\n            <label htmlFor=\"ay\">Y: </label>\r\n            <label htmlFor=\"aw\">W: </label>\r\n            <Field style={{ minWidth: '20px' }} id=\"ax\" name=\"ax\" />\r\n            <Field style={{ minWidth: '20px' }} id=\"ay\" name=\"ay\" />\r\n            <Field style={{ minWidth: '20px' }} id=\"aw\" name=\"aw\" />\r\n            <ErrorMessage name=\"ax\" component={ErrorDiv}/>\r\n            <ErrorMessage name=\"ay\" component={ErrorDiv}/>\r\n            <ErrorMessage name=\"aw\" component={ErrorDiv}/>\r\n          </div>\r\n        </>\r\n        }\r\n        <legend className={styles.Legend}>Position</legend>\r\n        <div className='grid grid-cols-3 gap-1'>\r\n            <label htmlFor=\"px\">X: </label>\r\n            <label htmlFor=\"py\">Y: </label>\r\n            <Field style={{ minWidth: '20px' }} id=\"px\" name=\"px\" />\r\n            <Field style={{ minWidth: '20px' }} id=\"py\" name=\"py\" />\r\n            <ErrorMessage name=\"px\" component={ErrorDiv}/>\r\n            <ErrorMessage name=\"py\" component={ErrorDiv}/>\r\n\r\n        <button className={styles.Button + ' row-start-1 row-span-2 col-start-3 rounded-sm bg-indigo-500 hover:bg-indigo-400'} onMouseDown={() => {\r\n          setDragging(() => (x, y) => {\r\n            formik.setFieldValue('px', x)\r\n            formik.setFieldValue('py', y)\r\n          })\r\n        }} ><TargetIcon width={35} height={35}/></button>\r\n        </div>\r\n        <button className={styles.Button + ' py-1 mt-2 font-semibold bg-green-500 hover:bg-green-400'} type=\"submit\">Add</button>\r\n        <button className={styles.Button + ' py-1 mt-2 font-semibold bg-red-500 hover:bg-red-400'} type='button' onClick={reset}>Reset</button>\r\n      </Form>\r\n      }\r\n    </Formik>\r\n    {dragging &&\r\n      <div ref={dragRef} className='z-20 fixed transform -translate-x-1/2 -translate-y-1/2 select-none' style={{ left: -500 }}>\r\n        <TargetIcon width={60} height={60}/>\r\n      </div>\r\n    }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Controls\r\n","import React, { useCallback, useEffect, useState } from 'react'\r\nimport './App.css'\r\nimport Canvas from './Components/Canvas'\r\nimport Controls from './Components/Controls'\r\n\r\nfunction App () {\r\n  const [world, setWorld] = useState(null)\r\n  const [canvas, setCanvas] = useState(null)\r\n\r\n  useEffect(() => {\r\n    setCanvas([<Canvas key={Math.random()} setWorld={setWorld}/>])\r\n  }, [])\r\n\r\n  const reset = useCallback(() => {\r\n    setCanvas([<Canvas key={Math.random()} setWorld={setWorld}/>])\r\n  }, [])\r\n\r\n  return (\r\n    <div style={{ display: 'grid', gridTemplateColumns: '3fr 1fr', height: '95vh', maxHeight: '100vh' }}>\r\n      {canvas}\r\n      <Controls world={world} reset={reset}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","const isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register (config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW (swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker (swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister () {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister()\n      })\n      .catch(error => {\n        console.error(error.message)\n      })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\n// import './reboot.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  <React.StrictMode>\n      <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\nserviceWorker.unregister()\n"],"sourceRoot":""}